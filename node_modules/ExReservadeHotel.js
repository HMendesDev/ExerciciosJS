const prompt = require('prompt-sync')();

let vetHospedes = []

let vetQuartos = [
    {quarto: 101, disponivel: true}, {quarto: 102, disponivel: true},
    {quarto: 103, disponivel: true}, {quarto: 104, disponivel: true},
    {quarto: 105, disponivel: true}, {quarto: 106, disponivel: true},
    {quarto: 107, disponivel: true}, {quarto: 108, disponivel: true},
    {quarto: 109, disponivel: true}, {quarto: 110, disponivel: true},
    {quarto: 111, disponivel: true}, {quarto: 112, disponivel: true},
    {quarto: 113, disponivel: true}, {quarto: 114, disponivel: true},
    {quarto: 115, disponivel: true}, {quarto: 116, disponivel: true},
    {quarto: 117, disponivel: true}, {quarto: 118, disponivel: true},
    {quarto: 119, disponivel: true}, {quarto: 120, disponivel: true},
    ]

let opcao = 0
let cpf = 0
while(true)
{
    menu()
    opcao = Number(prompt(`Qual opção deseja - `))
    switch (opcao){
        case 1:cadastraHospede(vetHospedes, vetQuartos); break

        case 2:cpf = Number(prompt(`Insira seu CPF para dar baixa = `));
        saidaHospede(vetHospedes, cpf); break

        case 3:consultaQuartosDisponiveis(vetQuartos); break

        case 4:consultaHospedes(vetHospedes); break

        case 6: console.log(`Encerrando programa......`); return 0
    }
    
}
     
function cadastraHospede(vetHospedes, vetQuartos)
{
    let CPF = Number(prompt(`Seu CPF = `))
    let Idade = Number(prompt(`Sua idade = `))
    let Quarto = Number(prompt(`Qual quarto deseja = `))
    let Data = prompt(`Data de entrada = `)
    while(true)
    {
        let verificar = cadastroQuarto(vetQuartos,Quarto)
        if (verificar == true)
        {
            vetHospedes.push({
                CPF:CPF,
                Idade:Idade,
                Quarto:Quarto,
                Data:Data
            })
            console.log(`Cadastrado com suceso`)
            return 0;
        }
        else if(verificar == false)
        {
            console.log(`Quarto indisponível, tente novamente!`)
            Quarto = Number(prompt(`Qual quarto deseja = `))
            continue
        }
    }
}

function cadastroQuarto(vetQuartos,Quarto)
{
    for (i = 0; i < vetQuartos.length; i ++)
    {
        if(Quarto == vetQuartos[i].quarto)
        {
            if(vetQuartos[i].disponivel == true)
            {
                vetQuartos[i].disponivel = false
                return true;
            }
            else if(vetQuartos[i].disponivel == false)
            {
                return false;
            }
        }
    }
}
function saidaHospede(vetHospedes, cpf)
{
    for (i = 0; i < vetHospedes.length; i ++)
    {
        if(vetHospedes[i].CPF == cpf)
        {
            vetHospedes[i].splice

        }
    }
}
function consultaQuartosDisponiveis(vetQuartos)
{
    for(i = 0; i < vetQuartos.length; i++)
    {
        if(vetQuartos[i].disponivel == true)
        {
            console.log(`Quarto ${vetQuartos[i].quarto} está disponível`)
        }
        else{
            console.log(`Quarto ${vetQuartos[i].quarto} está indisponível`)

        }
    }
}
function consultaHospedes(vetHospedes)
{
    console.log(`Hóspedes no hotel`)
    for (let i = 0; i < vetHospedes.length; i++){
        console.log(`CPF = `,vetHospedes[i].CPF)
        console.log(`Idade = `,vetHospedes[i].Idade)
        console.log(`Quarto = `,vetHospedes[i].Quarto)
        console.log(`Data da reserva = `,vetHospedes[i].Data,`\n`)
    }
}     
function menu ()
{
    console.log(`1 - Cadastrar um novo hóspede `)
    console.log(`2 - Registrar saída de um hóspede `)
    console.log(`3 - Listar quartos disponíveis `)
    console.log(`4 - Listar todos os hóspedes atualmente `)
    console.log(`5 - Determinar o hóspede com estadia mais longa `)
    console.log(`6 - Sair `)
}
